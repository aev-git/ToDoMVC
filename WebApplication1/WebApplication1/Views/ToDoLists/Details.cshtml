@using ToDoListWeb.Models
@model ToDoListWeb.Models.ToDoList

@{
    ViewData["Title"] = Model.Name;
    var m = new ToDoItem();
}
<div class="pull-right">
	<a asp-action="Index" class="btn btn-default">Back to List</a>
	<a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-success">Edit</a>
	<a asp-action="Create" class="btn btn-primary">Create New</a>
</div>
<h2>@Model.Name <small>Items</small></h2>

<table class="table">
    <thead>
    <tr>
        <th>
            @Html.DisplayNameFor(model => m.Memo)
        </th>
        <th>
            @Html.DisplayNameFor(model => m.IsDone)
        </th>

        <th></th>
    </tr>
    </thead>
    <tbody data-bind="foreach: items">
    <tr>
        <td data-bind="css: {completed: isDone}, text: memo">
               
        </td>
        <td>
            <input type="checkbox" data-bind="checked: isDone"/>
        </td>

        @* <td>
                <a asp-controller="ToDoItems" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-success btn-xs" title="Edit">
                    <span class="glyphicon glyphicon-pencil"></span>
                </a>
                <a asp-controller="ToDoItems" asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary btn-xs" title="Details">
                    <span class="glyphicon glyphicon-list-alt"></span>
                </a>
                <a asp-controller="ToDoItems" asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger btn-xs" title="Delete">
                    <span class="glyphicon glyphicon-remove"></span>
                </a>
            </td>*@
    </tr>
    </tbody>
</table>
<button data-bind="click: postData">Click Me</button>

@section Scripts
{
	<script type="text/javascript">

		function TodoItem() {
			this.memo = ko.observable();
			this.isDone = ko.observable();
		}

		function ViewModel() {
		    this.name = ko.observable('@Model.Name');
            this.items = ko.observableArray([]);
		    this.saved = function() {
		        alert("saved");
            };

		    this.postData = function() {
                var self = this;
		        $.ajax({
		            type: "post",
		            dataType: "JSON",
		            url: '@Url.Action("Save", "TodoItems")',
		            success: function() {
		                self.saved();
		            }
		    });
		    };

			@foreach (var item in Model.ToDoItems)
			{
				@:var item = new TodoItem();
				@:item.memo('@item.Memo');
				@:item.isDone(@item.IsDone.ToString().ToLower());

				@:this.items.push(item);

			}
		}

		ko.applyBindings(new ViewModel());

	</script>
}
